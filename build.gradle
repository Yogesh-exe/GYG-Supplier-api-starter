plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'java'
	id 'org.openapi.generator' version '6.2.0'
}

group = 'com.getyourguide'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.4")
}

def generatedDir = "$buildDir/generated"

sourceSets {
	main {
		java {
			srcDir 'src/main/java'
			srcDir generatedDir + '/src/main/java'
		}
	}
}


dependencies {
	//spring boot
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	//validations
	implementation 'org.hibernate.validator:hibernate-validator:7.0.5.Final'
	implementation 'javax.validation:validation-api:2.0.1.Final'
	
	compileOnly 'org.openapitools:openapi-generator-maven-plugin:6.2.0'
	compileOnly 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

def openapiServerConfig = [
		java8                  : "true",
		library                : "spring-boot",
		dateLibrary            : "java8",
		useBeanValidation      : "true",
		performBeanValidation  : "true",
		hideGenerationTimestamp: "true",
		serializableModel      : "true",
		interfaceOnly          : "true",
		skipDefaultInterface   : "true",
		useTags                : "true",
		openApiNullable        : "false"
]

task generateGYGSupplierApi(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {

    inputs.dir("${rootDir}/src/main/resources/specs/")
    outputs.dir(generatedDir)

    doFirst {
        delete "${generatedDir}/src/main/java/com/getyourguide/connectivity/api/supplierapi"
        mkdir generatedDir
    }

    generatorName = "spring"
    inputSpec = "${rootDir}/src/main/resources/specs/supplier-api-supplier-endpoints.yaml"
    outputDir = generatedDir
    invokerPackage = "com.getyourguide.connectivity.api.supplierapi"
    apiPackage = "com.getyourguide.connectivity.api.supplierapi"
    modelPackage = "com.getyourguide.connectivity.supplierapi.openapi.model"
    modelNameSuffix = "DTO"
    configOptions = openapiServerConfig
}

tasks.compileJava.dependsOn(tasks.generateGYGSupplierApi)